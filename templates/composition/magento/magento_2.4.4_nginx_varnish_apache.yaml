app:
  description: Magento 2.4.4 (Nginx + Varnish + Apache)
  supported_packages:
    magento/product-community-edition: '>=2.4.4 <2.4.5'
    magento/product-enterprise-edition: '>=2.4.4 <2.4.5'
  # Global parameters that are passed to every service
  parameters:
    environment: 'dev'
  composition:
    runners:
      nginx-proxy-for-varnish:
        service: dv_nginx_proxy_for_varnish
        parameters:
          varnish_port: 80
    required:
      varnish:
        # Do not plan to support Varnish 3 for this actually very old Magento 2 version
        varnish:
          service: dv_varnish_7_magento
          parameters:
            # docker-compose service name goes here
            backend_host: php
            # Config path: full_page_cache/default/grace_period
            grace_period: 300
            # Config path: web/secure/offloader_header. Changed to `X-Forwarded-Proto` since Magento 2.1
            ssl_offloaded_header: 'X-Forwarded-Proto'
            # Use `/pub/health_check.php` in case the web root equals to the project root
            health_check: '/health_check.php'
      apache:
        php_8_1_apache:
          service: dv_php_apache_unsecure
          dev_tools: dv_php_apache_dev_tools
          # Service-specific parameters
          parameters:
            composer_version: 2
            php_version: '8.1'
            web_root: 'pub/'
        # Not recommended, because 3G may not be enough to install dependencies
        php_7_4_apache:
          service: dv_php_apache_unsecure
          dev_tools: dv_php_apache_dev_tools
          # Service-specific parameters
          parameters:
            composer_version: 2
            php_version: '7.4'
            web_root: 'pub/'
      database:
        mysql_8_0_persistent:
          service: dv_mysql_persistent
          # Service-specific parameters
          parameters:
            mysql_version: '8.0'
        mariadb_10_4_persistent:
          service: dv_mariadb_persistent
          parameters:
            mariadb_version: '10.4'
      elasticsearch:
        elasticsearch_7_16_3:
          service: elasticsearch
          parameters:
            elasticsearch_version: '7.16.3'
        elasticsearch_7_16_3_persistent:
          service: elasticsearch_persistent
          parameters:
            elasticsearch_version: '7.16.3'

    optional:
      redis:
        redis_6_2:
          service: dv_redis
          parameters:
            redis_version: '6.2'