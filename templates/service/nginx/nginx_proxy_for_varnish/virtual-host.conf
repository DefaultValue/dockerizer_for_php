upstream varnish-cache-upstream {
    server varnish-cache:6081;
}

server {
    listen 80;
    listen [::]:80;
    server_name {{domains}};
    rewrite ^ https://$server_name$request_uri? permanent;
}

server {
   server_name {{domains}};
   listen 443 ssl http2;
   listen [::]:443 ssl http2;

   ssl_session_timeout 1d;
   ssl_session_cache shared:MozSSL:10m;
   ssl_session_tickets off;
   ssl_protocols TLSv1.2 TLSv1.3;
   ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
   ssl_prefer_server_ciphers off;
   # HSTS (ngx_http_headers_module is required) (63072000 seconds)
   add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload" always;
   # OCSP stapling
   ssl_stapling on;
   ssl_stapling_verify on;
   ssl_certificate /certs/{{domains|first}}-{{environment}}.pem;
   ssl_certificate_key /certs/{{domains|first}}-{{environment}}-key.pem;

   location / {
       proxy_pass http://varnish-cache-upstream;
       proxy_set_header Host               $http_host;
       proxy_set_header X-Forwarded-Host   $http_host;
       proxy_set_header X-Real-IP          $remote_addr;
       proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
       proxy_set_header X-Forwarded-Proto  https;
       proxy_set_header X-Forwarded-Port   443;
       proxy_buffer_size                   128k;
       proxy_buffers                       4 256k;
       proxy_busy_buffers_size             256k;
       fastcgi_buffer_size                 32k;
       fastcgi_buffers                     4 32k;
   }
}