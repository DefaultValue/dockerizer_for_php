#!/usr/bin/env php
<?php

ini_set('error_reporting', 'E_ALL & ~E_DEPRECATED');
ini_set('display_errors', 'On');
ini_set('display_startup_errors', 'On');

require_once __DIR__ . '/../vendor/autoload.php';

$builder = new \DI\ContainerBuilder();
// if definitions is an array - this is not treated as a file!
$builder->addDefinitions(__DIR__ . '/../config/di.php');

try {
    $container = $builder->build();
    $dotenv = $container->get(\Symfony\Component\Dotenv\Dotenv::class);
    $dotenv->usePutenv();
    $dotenv->load(__DIR__ . '/../.env.dist', __DIR__ . '/../.env.local');
    /** @var \Symfony\Component\Console\Application $application */
    $application = $container->get(\Symfony\Component\Console\Application::class);

    $application->add($container->get(\App\Command\Magento\SetUp::class));
    $application->add($container->get(\App\Command\Magento\Reinstall::class));
    $application->add($container->get(\App\Command\Magento\TestModuleInstall::class));
    $application->add($container->get(\App\Command\Dockerize::class));
    $application->add($container->get(\App\Command\EnvAdd::class));
    $application->add($container->get(\App\Command\Test\Hardware::class));
    $application->add($container->get(\App\Command\Test\Dockerfiles::class));

    $application->run();
} catch (\Throwable $e) {
    echo "{$e->getMessage()} in file {$e->getFile()} at line {$e->getLine()}\n";
    exit(1);
}
