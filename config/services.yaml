imports:
  - { resource: 'extends/*.yaml' }

services:
  _defaults:
    autowire: true
    autoconfigure: true
    bind:
      # Dockerizer project directory. Use this patch for filesystemParameterAwareCommand operations
      string $dockerizerRootDir: '%kernel.project_dir%'
      # Relative to the current project directory
      iterable $commandArguments: !tagged_iterator console.commandArgument
      iterable $availableCommandOptions: !tagged_iterator console.commandOption
  _instanceof:
    Symfony\Component\Console\Command\Command:
      tags: [ 'console.command' ]
    DefaultValue\Dockerizer\Console\CommandArgument\CommandArgumentInterface:
      tags: [ 'console.commandArgument' ]
    DefaultValue\Dockerizer\Console\CommandOption\OptionDefinitionInterface:
      tags: [ 'console.commandOption' ]
    DefaultValue\Dockerizer\DependencyInjection\DataTransferObjectInterface:
      shared: false
      public: true

  DefaultValue\Dockerizer\:
    resource: '../src/*'

  DefaultValue\Dockerizer\DependencyInjection\Factory:
    arguments:
      $container: '@service_container'

  DefaultValue\Dockerizer\Docker\Compose\Composition\Template\Collection:
    arguments:
      $dirToScan: './templates/composition/**/'

  DefaultValue\Dockerizer\Docker\Compose\Composition\Service\Collection:
    arguments:
      $dirToScan: './templates/service/**/'

#  app.dotenv:
#    class: Symfony\Component\Dotenv\Dotenv

#  local_infrastructure:
#    composition: ~/misc/apps/docker-infrastructure/local_infrastructure/docker-compose.yml
#    default_network: infrastructure_network

